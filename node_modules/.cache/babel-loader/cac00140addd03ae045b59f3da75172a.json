{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrado/projects/audicards/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Deck from \"./deck/Deck\";\nimport Heading from \"./heading/Heading\";\nimport \"./App.scss\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deck: {},\n      cardsDrawn: []\n    };\n\n    this.newDeck = async () => {\n      // new deck\n      try {\n        const url = \"https://deckofcardsapi.com/api/deck/new/shuffle\";\n        const response = await axios.get(url);\n        const deck = await response.data;\n        this.setState({\n          deck,\n          cardsDrawn: []\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.updateDeck = async deckId => {\n      // update deck\n      try {\n        const url = `https://deckofcardsapi.com/api/deck/${deckId}`;\n        const response = await axios.get(url);\n        const deck = await response.data;\n        this.setState({\n          deck\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.getCard = async () => {\n      // card from current deck\n      try {\n        //no cards left\n        if (this.state.deck.remaining === 0) {\n          alert(\"you ran out of cards\");\n        }\n\n        const url = `https://deckofcardsapi.com/api/deck/${this.state.deck.deck_id}/draw/`;\n        const resp = await axios.get(url);\n        const data = await resp.data;\n        this.setState(st => ({\n          cardsDrawn: [...st.cardsDrawn, ...data.cards]\n        }));\n        this.updateDeck(this.state.deck.deck_id);\n      } catch (err) {\n        console.error(err);\n      }\n\n      console.log(this.state.deck);\n    };\n  }\n\n  async componentDidMount() {\n    // fetch deck on load\n    this.newDeck();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cardApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Audi Magic card generator\"), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.getCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Draw Random Card\"), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.newDeck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(Deck, {\n      cards: this.state.cardsDrawn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/stephenrado/projects/audicards/src/App.js"],"names":["React","Component","axios","Deck","Heading","App","state","deck","cardsDrawn","newDeck","url","response","get","data","setState","err","console","error","updateDeck","deckId","getCard","remaining","alert","deck_id","resp","st","cards","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Deck from \"./deck/Deck\";\nimport Heading from \"./heading/Heading\";\nimport \"./App.scss\";\n\nexport default class App extends Component {\n  state = {\n    deck: {},\n    cardsDrawn: []\n  };\n\n  async componentDidMount() {\n    // fetch deck on load\n    this.newDeck();\n  }\n\n  newDeck = async () => {\n    // new deck\n    try {\n      const url = \"https://deckofcardsapi.com/api/deck/new/shuffle\";\n      const response = await axios.get(url);\n      const deck = await response.data;\n      this.setState({\n        deck,\n        cardsDrawn: []\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  updateDeck = async deckId => {\n    // update deck\n    try {\n      const url = `https://deckofcardsapi.com/api/deck/${deckId}`;\n      const response = await axios.get(url);\n      const deck = await response.data;\n      this.setState({ deck });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  getCard = async () => {\n    // card from current deck\n    try {\n      //no cards left\n      if (this.state.deck.remaining === 0) {\n        alert(\"you ran out of cards\");\n      }\n      const url = `https://deckofcardsapi.com/api/deck/${this.state.deck.deck_id}/draw/`;\n      const resp = await axios.get(url);\n      const data = await resp.data;\n      this.setState(st => ({\n        cardsDrawn: [...st.cardsDrawn, ...data.cards]\n      }));\n      this.updateDeck(this.state.deck.deck_id);\n    } catch (err) {\n      console.error(err);\n    }\n\n    console.log(this.state.deck)\n  };\n\n  render() {\n    return (\n      <div className=\"cardApp\">\n        <Heading>Audi Magic card generator</Heading>\n        <div className=\"button-container\">\n          <button className=\"button\" onClick={this.getCard}>\n            Draw Random Card\n          </button>\n          <button className=\"button\" onClick={this.newDeck}>\n            Reset\n          </button>\n        </div>\n        <Deck cards={this.state.cardsDrawn} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}